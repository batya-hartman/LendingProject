// <auto-generated />
using System;
using Lendings.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lendings.Data.Migrations
{
    [DbContext(typeof(LendingContext))]
    partial class LendingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lending.Services.Models.Lender", b =>
                {
                    b.Property<Guid>("LenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LenderId");

                    b.ToTable("Lenders");
                });

            modelBuilder.Entity("Lending.Services.Models.Rule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComparisonOperator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LogicalOperator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Operand")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LenderId");

                    b.ToTable("Rule");
                });

            modelBuilder.Entity("Lendings.Data.LendingEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Confirmed")
                        .HasColumnType("bit");

                    b.Property<Guid>("LenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PrincipalSignature")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LenderId");

                    b.ToTable("LendingEntities");
                });

            modelBuilder.Entity("Lendings.Data.Parameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LendingEntityId")
                        .HasColumnType("int");

                    b.Property<int>("LendingId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LendingEntityId");

                    b.ToTable("Parameter");
                });

            modelBuilder.Entity("Lending.Services.Models.Rule", b =>
                {
                    b.HasOne("Lending.Services.Models.Lender", "Lender")
                        .WithMany("Rules")
                        .HasForeignKey("LenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Lendings.Data.LendingEntity", b =>
                {
                    b.HasOne("Lending.Services.Models.Lender", "Lender")
                        .WithMany()
                        .HasForeignKey("LenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Lendings.Data.Parameter", b =>
                {
                    b.HasOne("Lendings.Data.LendingEntity", "LendingEntity")
                        .WithMany("Parameters")
                        .HasForeignKey("LendingEntityId");
                });
#pragma warning restore 612, 618
        }
    }
}
